# encoding: UTF-8

# require File.expand_path(File.dirname(__FILE__) + '/log/log')

require 'oj'
require 'json'
include Model
class SQE < Sinatra::Base
  register Sinatra::Reloader
 
get('/users_teams/list'){
   content_type :js
    res=DB[:users].left_join(:teams,:id=>:team_id).select(:users__login,:users__id,:users__title, Sequel.as(:teams__title,:team)).order(:teams__title,:users__title,:users__login).map { |e| 
      if e[:team].nil?
        e[:team]='--–û—Ç—â–µ–ø–µ–Ω—Ü—ã--'
      end
      e
     }
    return res.to_json
}

  post('/teams/list') {
    content_type :js
    res=  DB[:teams].all
    res<<{:id=>0,:title=>"–ü–æ–∫–∏–Ω—É—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–º–º–∞–Ω–¥—É"}
    res.to_json

  }

  post('/team/members') {
    content_type :js
    if session[:user].team_id.nil?
      return [].to_json
    end
    res=  DB[:users].where(:team_id=>session[:user].team_id).select(:id,:login,:captain,:team_adopt,:title).all
    res.to_json

  }
  post('/team/mng'){
    begin
      user=session[:user]
      usr_edit=User[params["user_id"].to_i]
      if !user.captain
        return {state: false,message:'–¢—ã –Ω–µ –∫–∞–ø–∏—Ç–∞–Ω —á—Ç–æ–±—ã —Ç–∞–∫ –¥–µ–ª–∞—Ç—å üòú'}.to_json
      end
      if usr_edit.nil?
        return {state: false,message:'–ö—Ç–æ —Ç—É—Ç —É–º–Ω—ã–π –æ—á–µ–Ω—å?'}.to_json
      end
      if user.team_id != usr_edit.team_id
        return {state: false,message:'–ö—Ç–æ —Ç—É—Ç —É–º–Ω—ã–π –æ—á–µ–Ω—å? üòú'}.to_json
      end
      if params["captain"].nil? && user.id==usr_edit.id && DB[:users].where(:team_id=>user.team_id,:captain=>false).count==1
        return {state: false,message:'–ù–µ–ª—å–∑—è —Å–Ω–∏–º–∞—Ç—å —Å —Å–µ–±—è –∫–∞–ø–∏—Ç–∞–Ω—Å—Ç–≤–æ –Ω–µ –æ—Å—Ç–∞–≤–∏–≤ –¥—Ä—É–≥–æ–≥–æ –∫–∞–ø–∏—Ç–∞–Ω–∞'}.to_json
      end
      if params["adopt"].nil? && user.id==usr_edit.id
        return {state: false,message:'–ù–µ–ª—å–∑—è —Å–Ω–∏–º–∞—Ç—å —Å —Å–µ–±—è –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}.to_json
      end
      if params["adopt"].nil? && (!params["captain"].nil? || usr_edit.captain)
        return {state: false,message:'–ù–µ–ª—å–∑—è —Å–Ω–∏–º–∞—Ç—å —Å –∫–∞–ø–∏—Ç–∞–Ω–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}.to_json
      end

      usr_edit.captain=!params["captain"].nil?
      usr_edit.team_adopt=!params["adopt"].nil?
      usr_edit.save
      return { state: true, message: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ" }.to_json
    rescue Exception => e
      logger.error e
      { state: false, message: e.message }.to_json
    end
  }


  post('/team/create') {
    begin
      logger.info params
      content_type :js
      user=session[:user]
      if !Team[:title=>params["title"].strip].nil?
        return {state: false,message:'–ö–æ–º–º–∞–Ω–¥–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ –µ—Å—Ç—å'}.to_json
      end
      if !user.team.nil?
        return {state: false,message:"–í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–æ–º–º–∞–Ω–¥–µ #{user.team.title}, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∏–Ω—É—Ç—å –∫–æ–º–º–∞–Ω–¥—É"}.to_json
      end
      team=Team.new(:title=>params["title"].strip)
      team.save
      user.team=team
      user.captain=true
      user.team_adopt=true
      user.save
      return {state: true,message:'–ö–æ–º–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞, –≤—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∫–∞–ø–∏—Ç–∞–Ω–æ–º'}.to_json
    rescue Exception => e
      logger.error e
      { state: false, message: e.message }.to_json
    end
  }
  post('/team/join') {
    content_type :js
    begin
      logger.info params
      content_type :js
      user=session[:user]

      if !user.team.nil? && user.captain
        return {state: false,message:"–í—ã –∫–∞–ø–∏—Ç–∞–Ω –≤ –∫–æ–º–º–∞–Ω–¥–µ #{user.team.title}, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ —Å–ª–æ–∂–∏—Ç—å –ø–æ–ª–Ω–æ–º–æ—á–∏—è"}.to_json
      end
      if params["team"].to_i==0
        user.team=nil
        user.team_adopt=false
        user.save
        return {state: true,message:"–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–æ–º–º–∞–Ω–¥—É"}.to_json
      end
      # if user.team.nil?
      #   user.team=Team[params["team"].to_i]
      #   user.save
      #   return {state: true,message:"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"}.to_json
      # end

      team=Team[params["team"].to_i]

      user.team=team
      user.captain=false
      user.team_adopt=false
      user.save
      return {state: true,message:"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"}.to_json
    rescue Exception => e
      logger.error e
      { state: false, message: e.message }.to_json
    end
    # erb :game
  }
end
